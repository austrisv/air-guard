name: Micropython software release

on:
  push:
    paths:
      - '.github/workflows/*.yml'
      - 'firmware/micropython/'

jobs:
  release_software_package:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Build package
      run: tools/flasher/build.sh "${{ github.ref_name }}"

    - name: TAR package
      run: tar -cvf micropython.tar -C ./build/original $(ls ./build/original)

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Software archive
        path: micropython.tar

    - name: Create Release
      id: create_release
      if: startsWith(github.ref, 'refs/tags/micropython-')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset
      if: startsWith(github.ref, 'refs/tags/micropython-')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: micropython.tar
        asset_name: micropython.tar
        asset_content_type: application/octet-stream
