esphome:
  name: air-guard
  platform: ESP32
  board: esp32dev

font:
  - file: 'fonts/poppins/Poppins-Bold.ttf'
    id: font_bold_xl
    size: 60
  - file: 'fonts/poppins/Poppins-Bold.ttf'
    id: font_bold_l
    size: 36
  - file: 'fonts/poppins/Poppins-Regular.ttf'
    id: font_regular_xs
    size: 13

# i2c for the display.
i2c:
  sda: 21
  scl: 22

# UART for the CO2 sensor.
uart:
  rx_pin: 16
  tx_pin: 17
  baud_rate: 9600

globals:
  - id: co2_history
    type: float[128]
    restore_value: yes

sensor:
  - platform: mhz19
    co2:
      id: mhz19b_co2
      name: "MH-Z19B CO2 Value"
      on_value:
        then:
          - lambda: |-
              for (int i = 127; i > 0; i--) {
                id(co2_history)[i] = id(co2_history)[i - 1];
              }
              id(co2_history)[0] = id(mhz19b_co2).state;
    temperature:
      id: mhz19b_t
      name: "MH-Z19B Temperature"
    update_interval: 10s
    automatic_baseline_calibration: false

display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3C
    id: display_ssd
    pages:
      - id: page_numeric
        lambda: |-
          it.print(2, -4, id(font_regular_xs), TextAlign::TOP_LEFT, "PPM CO2");
          it.printf(0, 4, id(font_bold_l), TextAlign::TOP_LEFT, "%.0f", id(mhz19b_co2).state);
          it.printf(128, 0, id(font_regular_xs), TextAlign::TOP_RIGHT, "%.0fÂ°", id(mhz19b_t).state);
          it.line(0, 63 - 1400 / 100, 127, 63 - 1400 / 100);
          for (int i = 0; i < 127; i++) {
            it.line(127 - i, 63 - id(co2_history)[i] / 100, 126 - i, 63 - id(co2_history)[i + 1] / 100);
          }
      - id: page_symbol
        lambda: |-
          if ( id(mhz19b_co2).state >= 1400 ) {
            it.print(64, -14, id(font_bold_xl), TextAlign::TOP_CENTER, ":-(");
          } else if ( id(mhz19b_co2).state >= 800 ) {
            it.print(64, -14, id(font_bold_xl), TextAlign::TOP_CENTER, ":-/");
          } else {
            it.print(64, -14, id(font_bold_xl), TextAlign::TOP_CENTER, ":-)");
          }

interval:
  - interval: 10s
    then:
      - display.page.show_next: display_ssd
      - component.update: display_ssd

# Enable logging
logger:

# Enable Home Assistant API
api:
  password: ""
  services:
    # Allow sensor calibration over the API.
    - service: mhz19_calibrate_zero
      then:
        - mhz19.calibrate_zero: mhz19b_co2

ota:
  password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Air-Guard Fallback Hotspot"
    password: "D7EoWmT7EuDq"

captive_portal:
