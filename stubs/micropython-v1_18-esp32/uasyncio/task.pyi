from . import core as core
from typing import Any, Optional

def ph_meld(h1: Any, h2: Any): ...
def ph_pairing(child: Any): ...
def ph_delete(heap: Any, node: Any): ...

class TaskQueue:
    heap: Any = ...
    def __init__(self) -> None: ...
    def peek(self): ...
    def push_sorted(self, v: Any, key: Any) -> None: ...
    def push_head(self, v: Any) -> None: ...
    def pop_head(self): ...
    def remove(self, v: Any) -> None: ...

class Task:
    coro: Any = ...
    data: Any = ...
    state: bool = ...
    ph_key: int = ...
    ph_child: Any = ...
    ph_child_last: Any = ...
    ph_next: Any = ...
    ph_rightmost_parent: Any = ...
    def __init__(self, coro: Any, globals: Optional[Any] = ...) -> None: ...
    def __iter__(self) -> Any: ...
    def __next__(self) -> None: ...
    def done(self): ...
    def cancel(self): ...
